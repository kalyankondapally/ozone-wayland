From 0c5166204272e2396a90830e281f7a92ae0876b8 Mon Sep 17 00:00:00 2001
From: Kondapally Kalyan <kalyan.kondapally@intel.com>
Date: Wed, 29 Jan 2014 05:49:48 +0200
Subject: [PATCH 01/15] character composer

---
 ui/base/ime/chromeos/character_composer.cc |   14 ++++++++++++--
 1 files changed, 13 insertions(+), 3 deletions(-)

diff --git a/ui/base/ime/chromeos/character_composer.cc b/ui/base/ime/chromeos/character_composer.cc
index 9155b73..68b4e12 100644
--- a/ui/base/ime/chromeos/character_composer.cc
+++ b/ui/base/ime/chromeos/character_composer.cc
@@ -4,8 +4,10 @@
 
 #include "ui/base/ime/chromeos/character_composer.h"
 
+#if defined(USE_X11)
 #include <X11/Xlib.h>
 #include <X11/Xutil.h>
+#endif
 
 #include <algorithm>
 #include <iterator>
@@ -371,6 +373,7 @@ bool UTF32CharacterToUTF16(uint32 character, base::string16* output) {
   return true;
 }
 
+#if defined(USE_X11)
 // Converts a X keycode to a X keysym with no modifiers.
 KeySym XKeyCodeToXKeySym(unsigned int keycode) {
   XDisplay* display = gfx::GetXDisplay();
@@ -383,6 +386,7 @@ KeySym XKeyCodeToXKeySym(unsigned int keycode) {
   x_key_event.keycode = keycode;
   return ::XLookupKeysym(&x_key_event, 0);
 }
+#endif
 
 // Returns an hexadecimal digit integer (0 to 15) corresponding to |keyval|.
 // -1 is returned when |keyval| cannot be a hexadecimal digit.
@@ -415,13 +419,18 @@ bool CharacterComposer::FilterKeyPress(const ui::KeyEvent& event) {
   if (!event.HasNativeEvent() ||
       (event.type() != ET_KEY_PRESSED && event.type() != ET_KEY_RELEASED))
     return false;
-
+#if defined(USE_X11)
   XEvent* xevent = event.native_event();
   DCHECK(xevent);
   KeySym keysym = NoSymbol;
   ::XLookupString(&xevent->xkey, NULL, 0, &keysym, NULL);
 
   return FilterKeyPressInternal(keysym, xevent->xkey.keycode, event.flags());
+#else
+  return FilterKeyPressInternal(event.GetCharacter(),
+                                event.key_code(),
+                                event.flags());
+#endif
 }
 
 
@@ -502,6 +511,7 @@ bool CharacterComposer::FilterKeyPressHexMode(unsigned int keyval,
   DCHECK(composition_mode_ == HEX_MODE);
   const size_t kMaxHexSequenceLength = 8;
   int hex_digit = KeyvalToHexDigit(keyval);
+#if defined(USE_X11)
   if (hex_digit < 0) {
     // With 101 keyboard, control + shift + 3 produces '#', but a user may
     // have intended to type '3'.  So, if a hexadecimal character was not found,
@@ -509,7 +519,7 @@ bool CharacterComposer::FilterKeyPressHexMode(unsigned int keyval,
     // try a character with modifier keys removed.
     hex_digit = KeyvalToHexDigit(XKeyCodeToXKeySym(keycode));
   }
-
+#endif
   if (keyval == GDK_KEY_Escape) {
     // Cancel composition when ESC is pressed.
     Reset();
-- 
1.7.9.5

